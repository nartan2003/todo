<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Unicommerce Link Hub</title>
  <style>
    body {
      font-family: "Segoe UI", sans-serif;
      background: #f5f7fa;
      margin: 0;
      color: #333;
    }
    header {
      background: #1f2937;
      color: white;
      padding: 1.5rem;
      text-align: center;
      box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }
    header input {
      margin-top: 12px;
      width: 70%;
      max-width: 500px;
      padding: 10px 15px;
      border-radius: 25px;
      border: none;
      outline: none;
      font-size: 1rem;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
    }
    #linkList {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  padding: 2rem;
}

    .card {
      background: white;
      padding: 1.2rem;
      border-radius: 12px;
      box-shadow: 0 3px 8px rgba(0,0,0,0.1);
      position: relative;
      transition: 0.2s;
    }
    .card:hover {
      transform: translateY(-4px);
      box-shadow: 0 6px 16px rgba(0,0,0,0.15);
    }
    .card h3 {
      margin-top: 0;
    }
    .card a {
      text-decoration: none;
      color: #2563eb;
    }
    .tag {
      background: #e0e7ff;
      color: #1e3a8a;
      padding: 3px 8px;
      border-radius: 4px;
      font-size: 0.8em;
      margin-right: 4px;
      display: inline-block;
    }
    .delete-btn {
      position: absolute;
      top: 10px;
      right: 10px;
      background: #ef4444;
      border: none;
      color: white;
      padding: 6px 10px;
      border-radius: 6px;
      font-size: 0.8rem;
      cursor: pointer;
    }
    .delete-btn:hover {
      background: #dc2626;
    }
    #addLinkBtn {
      position: fixed;
      bottom: 25px;
      right: 25px;
      background: #2563eb;
      color: white;
      border: none;
      padding: 14px 18px;
      border-radius: 50%;
      font-size: 24px;
      cursor: pointer;
      box-shadow: 0 4px 10px rgba(0,0,0,0.2);
    }
    #addLinkBtn:hover {
      background: #1e4ecf;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 10;
      left: 0; top: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.5);
    }
    .modal-content {
      background: white;
      margin: 8% auto;
      padding: 20px;
      width: 320px;
      border-radius: 10px;
    }
    .modal-content input, 
    .modal-content textarea {
      width: 100%;
      margin-bottom: 12px;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 6px;
    }
    .close {
      float: right;
      cursor: pointer;
      font-size: 22px;
    }
    .save-btn {
      background: #2563eb;
      color: white;
      border: none;
      padding: 10px 14px;
      border-radius: 6px;
      font-size: 1rem;
      cursor: pointer;
      width: 100%;
    }
  </style>
</head>
<body>
  <header>
    <h1>Unicommerce Link Hub</h1>
    <input type="text" id="searchBar" placeholder="Search links..." />
  </header>

  <main>
    <section id="linkList"></section>
  </main>

  <button id="addLinkBtn">ADD LINKS</button>

  <!-- Modal -->
  <div id="modal" class="modal">
    <div class="modal-content">
      <span id="closeModal" class="close">&times;</span>
      <h2>Add New Link</h2>
      <input type="text" id="titleInput" placeholder="Title" required />
      <input type="url" id="urlInput" placeholder="URL" required />
      <textarea id="descInput" placeholder="Description"></textarea>
      <input type="text" id="tagsInput" placeholder="Tags (comma separated)" />
      <button id="saveLink" class="save-btn">Save Link</button>
    </div>
  </div>

  <script>
    let links = JSON.parse(localStorage.getItem("links")) || [];
    const deletePasscode = "unicom123"; // change this to your desired passcode

    const linkList = document.getElementById("linkList");
    const searchBar = document.getElementById("searchBar");
    const addLinkBtn = document.getElementById("addLinkBtn");
    const modal = document.getElementById("modal");
    const closeModal = document.getElementById("closeModal");
    const saveLink = document.getElementById("saveLink");

    const titleInput = document.getElementById("titleInput");
    const urlInput = document.getElementById("urlInput");
    const descInput = document.getElementById("descInput");
    const tagsInput = document.getElementById("tagsInput");

    function renderLinks(filter = "") {
      linkList.innerHTML = "";
      let filteredLinks = links.filter(link =>
        link.title.toLowerCase().includes(filter.toLowerCase()) ||
        link.description.toLowerCase().includes(filter.toLowerCase()) ||
        link.tags.join(",").toLowerCase().includes(filter.toLowerCase())
      );

      filteredLinks.forEach((link, index) => {
        let card = document.createElement("div");
        card.className = "card";
        card.innerHTML = `
          <button class="delete-btn" onclick="deleteLink(${index})">Delete</button>
          <h3><a href="${link.url}" target="_blank">${link.title}</a></h3>
          <p>${link.description}</p>
          <div>${link.tags.map(tag => `<span class="tag">${tag}</span>`).join("")}</div>
        `;
        linkList.appendChild(card);
      });
    }

    function deleteLink(index) {
      const enteredCode = prompt("Enter delete code:");
      if (enteredCode === deletePasscode) {
        if (confirm("Are you sure you want to delete this link?")) {
          links.splice(index, 1);
          localStorage.setItem("links", JSON.stringify(links));
          renderLinks();
        }
      } else {
        alert("Incorrect code! Deletion cancelled.");
      }
    }

    saveLink.addEventListener("click", () => {
      const newLink = {
        title: titleInput.value.trim(),
        url: urlInput.value.trim(),
        description: descInput.value.trim(),
        tags: tagsInput.value.split(",").map(tag => tag.trim()).filter(t => t)
      };

      if (!newLink.title || !newLink.url) {
        alert("Title and URL are required!");
        return;
      }

      links.push(newLink);
      localStorage.setItem("links", JSON.stringify(links));
      renderLinks();
      modal.style.display = "none";
      titleInput.value = "";
      urlInput.value = "";
      descInput.value = "";
      tagsInput.value = "";
    });

    searchBar.addEventListener("input", (e) => {
      renderLinks(e.target.value);
    });

    addLinkBtn.onclick = () => modal.style.display = "block";
    closeModal.onclick = () => modal.style.display = "none";
    window.onclick = (event) => {
      if (event.target === modal) modal.style.display = "none";
    };

    renderLinks();
  </script>
</body>
</html>
